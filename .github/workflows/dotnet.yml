name: .NET

on:
  workflow_dispatch:
    inputs:
      relName:
        description: 'Release Name'
        required: true
env:
  solution_path: "./Source/Microsoft.Teams.Apps.FAQPlusPlus.sln"
  faqpluplus_path: "./Source/Microsoft.Teams.Apps.FAQPlusPlus/Microsoft.Teams.Apps.FAQPlusPlus.csproj"    
  azurefunc_path: "./Source/Microsoft.Teams.Apps.FAQPlusPlus.AzureFunction/Microsoft.Teams.Apps.FAQPlusPlus.AzureFunction.csproj"
  FAQPlusPlusFuncpublish_path: "/home/runner/work/microsoft-teams-apps-faqplus/microsoft-teams-apps-faqplus/Source/Microsoft.Teams.Apps.FAQPlusPlus.AzureFunction/bin/Release/netcoreapp2.1/publish"
  FAQPlusPluspublish_path: "/home/runner/work/microsoft-teams-apps-faqplus/microsoft-teams-apps-faqplus/Source/Microsoft.Teams.Apps.FAQPlusPlus/bin/Release/netcoreapp2.1/publish"
jobs:
  build_faqplusplusfunc:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - name: Setup .NET
       uses: actions/setup-dotnet@v1
       with:
        dotnet-version: 2.1.515
     - name: Restore dependencies
       run: dotnet restore "${{env.azurefunc_path}}"
     - name: Build
       run: dotnet build "${{env.azurefunc_path}}" --no-restore --configuration Release
     - name: Publish
       run: dotnet publish "${{env.azurefunc_path}}" --configuration Release --no-restore --no-build
    
     - uses: actions/upload-artifact@v2
       with:
        name: FAQPlusPlusFunc
        path: ${{env.FAQPlusPlusFuncpublish_path}}
     
  build_faqpluplus:
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.515
    - name: Restore dependencies
      run: dotnet restore "${{env.faqpluplus_path}}"
    - name: Build
      run: dotnet build "${{env.faqpluplus_path}}" --no-restore --configuration Release
    - name: Publish
      run: dotnet publish "${{env.faqpluplus_path}}" --configuration Release --no-restore --no-build
    
    - uses: actions/upload-artifact@v2
      with:
        name: FAQPlusPlus
        path: ${{env.FAQPlusPluspublish_path}}
  
  
  
  build_faqpluspusconfig: 
    runs-on: windows-latest 
    steps:
    - uses: actions/checkout@v2
      name: Checkout Code
     
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: nuget restore
      run: nuget restore $Env:GITHUB_WORKSPACE\Source\Microsoft.Teams.Apps.FAQPlusPlus.sln 
    
    - name: Build and Publish Web App
      run: msbuild $Env:GITHUB_WORKSPACE\Source\Microsoft.Teams.Apps.FaqPlusPlus.Configuration\Microsoft.Teams.Apps.FaqPlusPlus.Configuration.csproj /nologo /verbosity:m /t:Build /p:AutoParameterizationWebConfigConnectionStrings=false;Configuration=Release;UseSharedCompilation=false
 
    - name: Upload Artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: faqpluplusconfig
        path: bin\Release\Publish

  upload_builds:
    needs: [build_faqplusplusfunc, build_faqpluplus]
    runs-on: ubuntu-latest      
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.relName }}
        release_name: Release ${{ github.event.inputs.relName }}
        draft: false
        prerelease: false
    
    - name: Download FAQPlusPlusFunc
      uses: actions/download-artifact@v2
      with:
        name: FAQPlusPlusFunc
        path: ~/download/FAQPlusPlusFunc
    - shell: bash    
      run: |
          cd ~/download/FAQPlusPlusFunc/ && zip -r FAQPlusPlusFunc.zip *
    
    - name: Upload FAQPlusPlusFunc Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/download/FAQPlusPlusFunc/FAQPlusPlusFunc.zip
        asset_name: FAQPlusPlusFunc.zip
        asset_content_type: application/zip

    - name: Download FAQPlusPlus
      uses: actions/download-artifact@v2
      with:
        name: FAQPlusPlus
        path: ~/download/FAQPlusPlus
    - shell: bash    
      run: |
          cd ~/download/FAQPlusPlus/ && zip -r FAQPlusPlus.zip *
        
    - name: Upload FAQPlusPlus Release Asset
      id: upload-release-asset2 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/download/FAQPlusPlus/FAQPlusPlus.zip
          asset_name: FAQPlusPlus.zip
          asset_content_type: application/zip 
    
